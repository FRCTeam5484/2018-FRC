/*----------------------------------------------------------------------------*/
/* Copyright (c) 2017-2018 FIRST. All Rights Reserved.                        */
/* Open Source Software - may be modified and shared by FRC teams. The code   */
/* must be accompanied by the FIRST BSD license file in the root directory of */
/* the project.                                                               */
/*----------------------------------------------------------------------------*/

package org.usfirst.frc.team5484.robot;
import org.usfirst.frc.team5484.robot.commands.*;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI 
{
	public static JoystickButton button1;
	public static JoystickButton button2;
	public static JoystickButton button3;
	public static JoystickButton button4;
	public static JoystickButton button5;
	public static JoystickButton button6;
	public static JoystickButton button7;
	public static JoystickButton button8;
	public static JoystickButton button9;
	public static JoystickButton button10;
	
	
    public static Joystick buttonBox;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        buttonBox = new Joystick(0);
        button9 = new JoystickButton(buttonBox, 9);
        button10 = new JoystickButton(buttonBox, 10);
        
        button9.whenPressed(new Intake());
        button10.whileHeld(new Eject());
        
//        button1 = new JoystickButton(buttonBox, 1);
//        button1.whenPressed(new DriveForward(buttonBox));
        
//        button2 = new JoystickButton(buttonBox,2);
//        button2.whenPressed(new StopAllMotors());
        
//        button3 = new JoystickButton(buttonBox,3);
//        button3.whileHeld(new DriveForward(buttonBox));

        
        //SmartDashboard.putData("DriveForward", new DriveForward(buttonBox));
    }
    public Joystick getbuttonBox() {
        return buttonBox;
    }
    public double getDriverStickValue(int joyStickAxis){
    	return buttonBox.getRawAxis(joyStickAxis);
    }
    
}
